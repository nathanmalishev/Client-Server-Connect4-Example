// Nathan Malishev - nmalishev - 637410

1)A
A suffers for the security flaw of surreptitious forwarding. Surreptitious forwarding is where A encrypts message and sends it to B, where B decrypts the message & signature. At this point he can then re-again encrypt the message and send it to C, where they will believe it originated from A, as thats where its signature lies.
In this case it would be possible to frame people for information leaks & expose data that shouldn't be exposed.


2.
Must compress first. Once you have encrypted the file you should generate a random stream of data that will not be compressible (if your encryption algorithm is good). Compression algorithms depend on repetition in data, this should no longer be possible.


3.
a. 
Possible number of keys = 2^128
Per second can decrypt  = 10^6

So time to test them all 2^128*10^-6 = 3.4e+32s
In years = 1.08e+25 years  (larger than the estimated age of the universe!)


b.
Possible number of keys = 2^256
Per second can decrypt  = 10^6

So time to test them all = 2^256*10^-6 = 1.16e+71s
In years = 3.67e+63 years


c. 
in one day how many milliseconds in a day? = 86400000
So in one day how many keys could be generated? 86400000
Per second can decrypt = 10^6

So time to test them all = 86400000 * 10^-6 = 86.4s
only 86.4 seconds


d. 
How many keys in a millennium?
keys produced in one day = (1000*60*60*24) = 86400000
Days in a millennium = (365 242.199)  (from Google)

Keys per day * Days in millennium = 3.16e+13
Possible keys produced in millennium * computing speed
= 3.16e+12 * 10^-6 = 31556926 seconds

About 365.24 Days == 1 Year